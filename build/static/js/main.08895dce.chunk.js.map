{"version":3,"sources":["SidebarOption.js","Sidebar.js","firebase.js","TweetBox.js","Post.js","Feed.js","Widgets.js","App.js","serviceWorker.js","index.js"],"names":["SidebarOption","active","text","Icon","className","Sidebar","HomeIcon","SearchIcon","NotificationsNoneIcon","MailOutlineIcon","BookmarkBorderIcon","ListAltIcon","PermIdentityIcon","MoreHorizIcon","Button","variant","fullWidth","onClick","firebase","auth","signOut","type","db","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","TweetBox","useState","tweetMessage","setTweetMessage","tweetImage","setTweetImage","Avatar","src","onChange","e","target","value","placeholder","preventDefault","collection","add","displayName","username","verified","image","avatar","Post","forwardRef","ref","alt","fontSize","Feed","posts","setPosts","useEffect","onSnapshot","snapshot","docs","map","doc","data","post","key","Widgets","tweetId","sourceType","screenName","options","height","url","app","state","isSignedIn","uiConfig","signinFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","EmailAuthProvider","callbacks","signInSuccess","componentDidMount","onAuthStateChanged","user","setState","this","firebaseAuth","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oQAYeA,MATf,YAAgD,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,KACnC,OACI,yBAAKC,UAAS,wBAAmBH,GAAU,0BACvC,kBAACE,EAAD,MACA,4BAAKD,K,+GCuCFG,MA/Bf,WACI,OACI,yBAAKD,UAAU,WACf,kBAAC,IAAD,CAAaA,UAAU,gBAEvB,kBAAC,EAAD,CAAeH,QAAM,EAACE,KAAMG,IAAUJ,KAAK,SAC3C,kBAAC,EAAD,CAAeC,KAAMI,IAAYL,KAAK,YACtC,kBAAC,EAAD,CAAeC,KAAMK,IAAuBN,KAAK,kBACjD,kBAAC,EAAD,CAAeC,KAAMM,IAAiBP,KAAK,aAC3C,kBAAC,EAAD,CAAeC,KAAMO,IAAoBR,KAAK,aAC9C,kBAAC,EAAD,CAAeC,KAAMQ,IAAaT,KAAK,UACvC,kBAAC,EAAD,CAAeC,KAAMS,IAAkBV,KAAK,YAC5C,kBAAC,EAAD,CAAeC,KAAMU,IAAeX,KAAK,SAQzC,kBAACY,EAAA,EAAD,CAAQC,QAAQ,WAAWX,UAAU,iBAAiBY,WAAS,GAA/D,cAKA,kBAACF,EAAA,EAAD,CAAQG,QAAS,kBAAIC,IAASC,OAAOC,WAAWC,KAAK,SAASjB,UAAU,kBAAkBY,WAAS,GAAnG,e,yBCvBOM,EAJKJ,IAASK,cAXN,CACnBC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,wCACbC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKIC,YCmCRC,MA7Cf,WAAqB,IAAD,EACwBC,mBAAS,IADjC,mBACTC,EADS,KACKC,EADL,OAEoBF,mBAAS,IAF7B,mBAETG,EAFS,KAEGC,EAFH,KAoBhB,OAAO,yBAAKlC,UAAU,YAClB,8BACI,yBAAKA,UAAU,mBACX,kBAACmC,EAAA,EAAD,CAAQC,IAAI,qJACZ,2BACAC,SAAU,SAACC,GAAD,OAAON,EAAgBM,EAAEC,OAAOC,QAC1CA,MAAOT,EACPU,YAAY,cACZxB,KAAK,UAGT,2BACIuB,MAAOP,EACPI,SAAU,SAACC,GAAD,OAAOJ,EAAcI,EAAEC,OAAOC,QACxCxC,UAAU,sBACVyC,YAAY,4BACZxB,KAAK,SAGT,kBAACP,EAAA,EAAD,CAAQG,QAnCE,SAAAyB,GACdA,EAAEI,iBAEFxB,EAAGyB,WAAW,SAASC,IAAI,CACvBC,YAAa,OACbC,SAAU,OACVC,UAAU,EACVjD,KAAMiC,EACNiB,MAAOf,EACPgB,OAAO,qJAGXjB,EAAgB,IAChBE,EAAc,KAsBkBjB,KAAK,SAASjB,UAAU,yBAApD,iB,6FCOGkD,EA1CFC,sBAAW,WAOpBC,GAAS,IANTP,EAMQ,EANRA,YACAC,EAKQ,EALRA,SACAC,EAIQ,EAJRA,SACAjD,EAGQ,EAHRA,KACAkD,EAEQ,EAFRA,MACAC,EACQ,EADRA,OAEA,OACI,yBAAKjD,UAAU,OAAOoD,IAAKA,GACvB,yBAAKpD,UAAU,gBACX,kBAACmC,EAAA,EAAD,CAAQC,IAAKa,KAEjB,yBAAKjD,UAAU,cACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,oBACX,4BACK6C,EAAa,IACd,0BAAM7C,UAAU,uBACd+C,GAAW,kBAAC,IAAD,CAAkB/C,UAAU,gBADzC,KAEE8C,KAIV,yBAAK9C,UAAU,2BACX,2BAAIF,KAGZ,yBAAKsC,IAAKY,EACVK,IAAI,KAEJ,yBAAKrD,UAAU,gBACX,kBAAC,IAAD,CAAuBsD,SAAS,UAChC,kBAAC,IAAD,CAAYA,SAAS,UACrB,kBAAC,IAAD,CAAoBA,SAAS,UAC7B,kBAAC,IAAD,CAAaA,SAAS,gB,gBCA3BC,MArCf,WAAiB,IAAD,EACczB,mBAAS,IADvB,mBACL0B,EADK,KACEC,EADF,KASZ,OANAC,qBAAU,WACNxC,EAAGyB,WAAW,SAASgB,YAAW,SAAAC,GAAQ,OACtCH,EAASG,EAASC,KAAKC,KAAI,SAAAC,GAAG,OAAIA,EAAIC,gBAE3C,IAGC,yBAAKhE,UAAU,QACb,yBAAKA,UAAU,gBACX,qCAGJ,kBAAC,EAAD,MAEA,kBAAC,IAAD,KACCwD,EAAMM,KAAI,SAAAG,GAAI,OACb,kBAAC,EAAD,CACCC,IAAKD,EAAKnE,KACV+C,YAAaoB,EAAKpB,YAClBC,SAAUmB,EAAKnB,SACfC,SAAUkB,EAAKlB,SACfjD,KAAMmE,EAAKnE,KACXmD,OAAQgB,EAAKhB,OACbD,MAAOiB,EAAKjB,c,gBCIVmB,MA5Bf,WACI,OACI,yBAAKnE,UAAU,WACZ,yBAAKA,UAAU,kBACd,kBAAC,IAAD,CAAYA,UAAU,wBACtB,2BAAOyC,YAAY,iBAAiBxB,KAAK,UAGzC,yBAAKjB,UAAU,4BACf,gDAEA,kBAAC,IAAD,CAAmBoE,QAAS,wBAE5B,kBAAC,IAAD,CACIC,WAAW,UACXC,WAAW,WACXC,QAAS,CAAEC,OAAQ,OAGvB,kBAAC,IAAD,CACIC,IAAK,2DACLF,QAAS,CAAEzE,KAAM,6B,0BCmClB4E,G,4MAvDbC,MAAQ,CAACC,YAAY,G,EACrBC,SAAW,CACVC,WAAY,QAEZC,cAAe,CACbjE,IAASC,KAAKiE,mBAAmBC,YACjCnE,IAASC,KAAKmE,kBAAkBD,aAElCE,UAAW,CACTC,cAAe,kBAAM,K,EAIxBC,kBAAoB,WAClBvE,IAASC,OAAOuE,oBAAmB,SAAAC,GACjC,EAAKC,SAAS,CAACZ,aAAaW,Q,uDAM9B,OACE,yBAAKvF,UAAU,OACb,mDAAwB,kBAAC,IAAD,CAAaA,UAAU,iBAC9CyF,KAAKd,MAAMC,WACT,yBAAK5E,UAAU,OACf,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,OAGD,kBAAC,KAAD,CACA6E,SAAUY,KAAKZ,SACfa,aAAc5E,IAASC,c,GAlCf4E,aCGEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.08895dce.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./SidebarOption.css\";\r\n\r\nfunction SidebarOption({ active, text, Icon }) {\r\n    return (\r\n        <div className={`sidebarOption ${active && 'sidebarOption--active'}`}>\r\n            <Icon />\r\n            <h2>{text}</h2>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SidebarOption\r\n","import React from \"react\"\r\nimport BathtubIcon from '@material-ui/icons/Bathtub';\r\nimport './Sidebar.css'\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\r\nimport SidebarOption from \"./SidebarOption\";\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport { Button } from \"@material-ui/core\";\r\nimport firebase from \"firebase\";\r\n\r\nfunction Sidebar(){\r\n    return (\r\n        <div className=\"Sidebar\">\r\n        <BathtubIcon className=\"bathtubIcon\" />\r\n\r\n        <SidebarOption active Icon={HomeIcon} text=\"Home\" />\r\n        <SidebarOption Icon={SearchIcon} text=\"Explore\" />\r\n        <SidebarOption Icon={NotificationsNoneIcon} text=\"Notifications\" />\r\n        <SidebarOption Icon={MailOutlineIcon} text=\"Messages\" />\r\n        <SidebarOption Icon={BookmarkBorderIcon} text=\"Bookmark\" />\r\n        <SidebarOption Icon={ListAltIcon} text=\"Lists\" />\r\n        <SidebarOption Icon={PermIdentityIcon} text=\"Profile\" />\r\n        <SidebarOption Icon={MoreHorizIcon} text=\"More\" />\r\n\r\n        {/* SidebarOption*/}\r\n        {/* SidebarOption*/}\r\n        {/* SidebarOption*/}\r\n        {/* SidebarOption*/}\r\n\r\n        {/* Tweet */}\r\n        <Button variant=\"outlined\" className=\"sidebar__tweet\" fullWidth>\r\n            TubThought\r\n            </Button>\r\n        \r\n\r\n        <Button onClick={()=>firebase.auth().signOut()} type=\"submit\" className=\"signout__Button\" fullWidth>Sign Out!</Button>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar;","import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAcD_UPU97AfjsRpzPmh_g4yjSg2ysfjak\",\r\n    authDomain: \"mind-app-f153d.firebaseapp.com\",\r\n    databaseURL: \"https://mind-app-f153d.firebaseio.com\",\r\n    projectId: \"mind-app-f153d\",\r\n    storageBucket: \"mind-app-f153d.appspot.com\",\r\n    messagingSenderId: \"708366980078\",\r\n    appId: \"1:708366980078:web:069767339466c5ee6674ff\",\r\n    measurementId: \"G-3C1JMD5EK2\"\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebaseApp.firestore();\r\n\r\nexport default db;","import React, { useState} from 'react'\r\nimport \"./TweetBox.css\";\r\nimport { Avatar, Button } from '@material-ui/core';\r\nimport db from \"./firebase\";\r\n\r\nfunction TweetBox() {\r\n    const [tweetMessage, setTweetMessage] = useState(\"\");\r\n    const [tweetImage, setTweetImage] = useState(\"\");\r\n\r\n    const sendTweet = e => {\r\n        e.preventDefault();\r\n\r\n        db.collection('posts').add({\r\n            displayName: 'ANON',\r\n            username: 'ANON',\r\n            verified: false,\r\n            text: tweetMessage,\r\n            image: tweetImage,\r\n            avatar:\"https://telecomstechnews.com/wp-content/uploads/sites/7/2020/06/anonymous-hacking-george-floyd-security-ddos-minneapolis-police-usa-protests.jpg\"\r\n        });\r\n\r\n        setTweetMessage(\"\");\r\n        setTweetImage(\"\");\r\n    };\r\n\r\n    return <div className=\"tweetBox\">\r\n        <form>\r\n            <div className=\"tweetBox__input\">\r\n                <Avatar src=\"https://telecomstechnews.com/wp-content/uploads/sites/7/2020/06/anonymous-hacking-george-floyd-security-ddos-minneapolis-police-usa-protests.jpg\"></Avatar>\r\n                <input \r\n                onChange={(e) => setTweetMessage(e.target.value)}\r\n                value={tweetMessage} \r\n                placeholder=\"What's new?\" \r\n                type=\"text\" \r\n                />\r\n            </div>\r\n            <input \r\n                value={tweetImage}\r\n                onChange={(e) => setTweetImage(e.target.value)}\r\n                className=\"tweetBox_imageInput\" \r\n                placeholder=\"Optional: Enter image URL\" \r\n                type=\"text\" \r\n            />\r\n\r\n            <Button onClick={sendTweet} type=\"submit\" className=\"tweetBox__tweetButton\">TubThought</Button>\r\n        </form>\r\n        </div>\r\n    \r\n}\r\n\r\nexport default TweetBox\r\n","import React, { forwardRef } from 'react';\r\nimport \"./Post.css\";\r\nimport { Avatar } from \"@material-ui/core\"\r\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\nimport RepeatIcon from '@material-ui/icons/Repeat';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\n\r\nconst Post = forwardRef(({ \r\n    displayName,\r\n    username, \r\n    verified, \r\n    text, \r\n    image, \r\n    avatar }, \r\n    ref) => {\r\n    return (\r\n        <div className=\"post\" ref={ref}>\r\n            <div className=\"post__avatar\">\r\n                <Avatar src={avatar} ></Avatar>\r\n            </div>\r\n            <div className=\"post__body\">\r\n                <div className=\"post__header\">\r\n                    <div className=\"post__headerText\">\r\n                        <h3>\r\n                            {displayName}{\" \"}\r\n                            <span className=\"post__headerSpecial\">\r\n                             {verified &&<VerifiedUserIcon className=\"post__badge\" />} @\r\n                             {username}\r\n                            </span>\r\n                        </h3>\r\n                    </div>\r\n                    <div className=\"post__headerDescription\">\r\n                        <p>{text}</p>\r\n                    </div>\r\n                </div>\r\n                <img src={image} \r\n                alt=\"\" \r\n                />\r\n                <div className=\"post__footer\">\r\n                    <ChatBubbleOutlineIcon fontSize=\"small\" />\r\n                    <RepeatIcon fontSize=\"small\" />\r\n                    <FavoriteBorderIcon fontSize=\"small\" />\r\n                    <PublishIcon fontSize=\"small\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Post\r\n","import React, { useState, useEffect } from 'react'\r\nimport TweetBox from './TweetBox';\r\nimport Post from \"./Post\";\r\nimport \"./Feed.css\";\r\nimport db from './firebase';\r\nimport FlipMove from 'react-flip-move';\r\n\r\nfunction Feed() {\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        db.collection('posts').onSnapshot(snapshot => (\r\n            setPosts(snapshot.docs.map(doc => doc.data()))\r\n        ))\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"feed\">\r\n          <div className=\"feed__header\" >\r\n              <h2>Home</h2>\r\n          </div>\r\n          \r\n          <TweetBox />\r\n          \r\n          <FlipMove>\r\n          {posts.map(post => (\r\n            <Post \r\n             key={post.text}\r\n             displayName={post.displayName}\r\n             username={post.username} \r\n             verified={post.verified}\r\n             text={post.text}\r\n             avatar={post.avatar}\r\n             image={post.image}\r\n            />\r\n          ))}\r\n          </FlipMove>\r\n          \r\n\r\n         \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feed\r\n","import React from 'react'\r\nimport \"./Widgets.css\";\r\nimport {\r\n    TwitterTimelineEmbed,\r\n    TwitterShareButton,\r\n    TwitterTweetEmbed\r\n} from \"react-twitter-embed\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nfunction Widgets() {\r\n    return (\r\n        <div className=\"widgets\">\r\n           <div className=\"widgets__input\">\r\n            <SearchIcon className=\"widgets__searchIcon\" />  \r\n            <input placeholder=\"Search BathTub\" type=\"text\" />  \r\n           </div>\r\n\r\n            <div className=\"widgets__widgetContainer\">\r\n            <h2>What's going on?</h2>\r\n\r\n            <TwitterTweetEmbed tweetId={\"1292761888246378496\"} ></TwitterTweetEmbed>\r\n\r\n            <TwitterTimelineEmbed\r\n                sourceType=\"profile\"\r\n                screenName=\"ElonMusk\"\r\n                options={{ height: 400}}\r\n            />\r\n\r\n            <TwitterShareButton\r\n                url={\"https://www.innovisionsociety.org/scholarship-recipients\"}\r\n                options={{ text: \"A scholarship I won!\"}}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Widgets\r\n","import React, { Component } from 'react';\nimport Sidebar from \"./Sidebar\";\nimport Feed from \"./Feed\";\nimport Widgets from \"./Widgets\";\nimport './App.css';\nimport firebase from \"firebase\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport BathtubIcon from '@material-ui/icons/Bathtub';\n\nclass app extends Component{\n  state = {isSignedIn: false}\n  uiConfig = {\n   signinFlow: \"popup\",\n   \n   signInOptions: [\n     firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n     firebase.auth.EmailAuthProvider.PROVIDER_ID\n   ],\n   callbacks: {\n     signInSuccess: () => false\n   }\n  }\n  \n  componentDidMount = ()=>{\n    firebase.auth().onAuthStateChanged(user => {\n      this.setState({isSignedIn:!!user})\n    })\n  }\n  \n  \n   render() {\n    return(\n      <div className=\"App\">\n        <h1>WELCOME TO BATHTUB! <BathtubIcon className=\"bathtubIcon\" /></h1> \n        {this.state.isSignedIn ? (\n           <div className=\"app\">\n           <Sidebar />\n           <Feed />\n           <Widgets />\n           </div>\n        ) : (\n          <StyledFirebaseAuth\n          uiConfig={this.uiConfig}\n          firebaseAuth={firebase.auth()}\n          />\n        )}\n       </div>\n     )\n   }\n}\n\n\n\n/*function App() {\n  return (\n    //BEM convention\n    <div className=\"app\">\n    <Sidebar />\n    <Feed />\n    <Widgets />\n    </div>\n  );\n} */\n\n\nexport default app; \n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}